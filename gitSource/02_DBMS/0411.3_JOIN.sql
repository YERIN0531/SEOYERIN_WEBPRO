--[III] JOIN : 테이블 2개 이상을 연결하여 검색 
SELECT * FROM EMP WHERE ENAME ='SCOTT'; -- 부서번호(DEPTNO 20)
SELECT * FROM DEPT;
-- CROSS JOIN (FROM절에 TABLE 두개 이상 넣는 것) 
SELECT * FROM EMP,DEPT WHERE ENAME ='SCOTT';
--------------1  * 4  -------수행하면 EMP에 DEPT테이블이 다 달라붙어서 보는 의미가 없음
SELECT * FROM EMP, DEPT; -- 14*4 = 56행


-- ★ 1. EQUI JOIN (동등조인 : 공통 필드인 DEPTNO값이 일치되는 조건 JOIN)
SELECT * FROM EMP,DEPT WHERE EMP.DEPTNO = DEPT.DEPTNO; 
SELECT * FROM EMP,DEPT WHERE ENAME ='SCOTT' AND EMP.DEPTNO = DEPT.DEPTNO; 
SELECT * FROM EMP,DEPT WHERE  EMP.DEPTNO = DEPT.DEPTNO AND ENAME ='SCOTT' ; 

SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, EMP.DEPTNO , DNAME, LOC 
FROM EMP,DEPT
WHERE EMP.DEPTNO=DEPT.DEPTNO;

-- 테이블의 별칭 (테이블의 별칭이 있으면 별칭으로만 테이블을 엑세스 할 수 있습니다)
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, E.DEPTNO, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO;

    --EX. 급여가 2000이상인 직원의 이름, 직챙(JOB), 급여, 부서명(DNAME), 근무지(LOC) 출력 
SELECT ENAME, JOB, SAL, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND SAL>=2000;

    --EX. 근무지가 (LOC) 'CHICAGO'인 사람의 이름, 업무, 급여, 부서번호 , 근무지(LOC) 출력
SELECT ENAME, JOB, SAL, D.DEPTNO, LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND LOC='CHICAGO';

    --EX. 부서번호가 10이거나 20번인 사원의 이름, 업무, 근무지, 급여
SELECT ENAME, JOB, LOC, SAL 
FROM EMP E, DEPT D 
WHERE E.DEPTNO = D.DEPTNO AND E.DEPTNO IN(10,20) ORDER BY SAL;

    --EX. JOB이 SALESMAN이거나 MANAGER인 사원의 이름, 급여, 상여, 연봉((SAL+COMM)*12), 부서명(DNAME) , 근무지(LOC) 연봉이 큰 순 
SELECT ENAME, SAL, COMM, (SAL+NVL(COMM,0)*12) "연봉", DNAME, LOC 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND JOB IN('SALESMAN','MANAGER') ORDER BY "연봉" DESC;

    --EX. COMM이 NULL이고 급여가 1200이상인 사원의 이름, 급여, 입사일, 부서번호, 부서명 출력 -- 부셔명순, 급여큰순 정렬
SELECT ENAME, SAL, HIREDATE, E.DEPTNO, DNAME FROM EMP E, DEPT D 
WHERE E.DEPTNO=D.DEPTNO AND SAL>=1200 AND COMM IS NULL ORDER BY DNAME,SAL DESC;

    --EX. 'NEW YORK'에서 근무하는 사원의 이름과 급여 출력 
SELECT ENAME, SAL FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND LOC = 'NEW YORK';
SELECT * FROM EMP,DEPT;

    --EX. 'ACCOUNTING' 부서 소속의 사원이름과 입사일 출력 
SELECT ENAME, HIREDATE FROM EMP E, DEPT D WHERE DNAME = 'ACCOUNTING';

    --EX. 직급(JOB)이 MANAGER인 사원의 이름 부서명을 출력하라 
SELECT ENAME, DNAME FROM EMP E, DEPT D WHERE JOB = 'MANAGER';

    --EX. COMM이 NULL이 아닌 사원의 이름, 급여, 부서번호, 근무지 출력 
SELECT ENAME, SAL, E.DEPTNO, LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND NOT COMM IS NULL;

-- ★ 2. NON-EQUI JOIN (동등하지 않은 JOIN)  
SELECT * FROM EMP WHERE ENAME = 'SCOTT'; --EMP TABLE은 사원정보 
SELECT * FROM SALGRADE; --급여 등급 정보 

-- CROSS JOIN = EMP의 1행 * SALGRADE의 5행 
SELECT * FROM EMP,SALGRADE WHERE ENAME='SCOTT';

-- JOIN 조건에 BETWEEN을 넣으면 됨 
SELECT * FROM EMP, SALGRADE WHERE ENAME = 'SCOTT' AND SAL BETWEEN LOSAL AND HISAL;
SELECT * FROM EMP, SALGRADE WHERE ENAME = 'SCOTT' AND SAL >= LOSAL AND SAL<=HISAL; --이렇게 잘 안씀

    --EX. 모든 사원의 사번, 이름, JOB, 상사사번, 급여, 급여등급(1등급,2등급..) --'등급'뒤에 ALIAS 안주면 특수문자 들어갈 수 있음 
SELECT * FROM SALGRADE;
SELECT EMPNO, ENAME, JOB, MGR, SAL, GRADE||'등급' GRADE
FROM EMP, SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL;

-------------------------NON-EQUI JOIN 탄탄문제----------------------------------------
--탄탄1. Comm이 null이 아닌 사원의 이름, 급여, 등급, 부서번호, 부서이름, 근무지를 출력하시오.
SELECT ENAME, SAL , GRADE, E.DEPTNO, DNAME, LOC 
FROM EMP E, DEPT D, SALGRADE  
WHERE E.DEPTNO = D.DEPTNO 
AND SAL BETWEEN LOSAL AND HISAL 
AND NOT COMM IS NULL;
--탄탄2. 이름, 급여, 입사일, 급여등급
SELECT ENAME, SAL, HIREDATE, GRADE FROM EMP, SALGRADE WHERE SAL BETWEEN LOSAL AND HISAL;
--탄탄3. 이름, 급여, 입사일, 급여등급, 부서명, 근무지
SELECT ENAME, SAL, HIREDATE, GRADE, DNAME, LOC
FROM EMP E, DEPT D, SALGRADE
WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL;
--탄탄4. 이름, 급여, 등급, 부서코드, 근무지. 단 comm 이 null아닌 경우
SELECT ENAME, SAL, GRADE, E.DEPTNO, LOC 
FROM EMP E, DEPT D, SALGRADE
WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL AND NOT COMM IS NULL;
--탄탄5. 이름, 급여, 급여등급, 연봉, 부서명 (부서별 출력, 부서가 같으면 연봉순) 연봉=(sal+comm)*12 comm이 null이면 0
SELECT ENAME, SAL, GRADE, (SAL+NVL(COMM,0))*12 "연봉", DNAME
FROM EMP E, DEPT D, SALGRADE 
WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL 
ORDER BY DNAME,(SAL+NVL(COMM,0))*12;

--탄탄6. 이름, 업무, 급여, 등급, 부서코드, 부서명 출력. 급여가 1000~3000사이. 정렬조건 : 부서별, 부서같으면 업무별, 업무같으면 급여 큰순
SELECT ENAME, JOB, SAL, GRADE, E.DEPTNO, DNAME
FROM EMP E, DEPT D, SALGRADE
WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
AND SAL BETWEEN 1000 AND 3000
ORDER BY DNAME, JOB, SAL DESC;


--탄탄7. 이름, 급여, 등급, 입사일, 근무지. 81년에 입사한 사람. 등급 큰순
SELECT ENAME, SAL, GRADE, HIREDATE, LOC
FROM EMP E, DEPT D, SALGRADE
WHERE E.DEPTNO=D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL
AND HIREDATE LIKE '%81%'
ORDER BY GRADE DESC;

-- ★ 3. SELF JOIN
SELECT EMPNO, ENAME, MGR FROM EMP WHERE ENAME = 'SMITH';  -- 스미스의 상사 이름까지 원하면 SELF JOIN 
                                                          -- SMITH 상사 사번 : 7902
SELECT EMPNO, ENAME FROM EMP WHERE EMPNO=7902;
SELECT EMPNO, ENAME, MGR, EMPNO, ENAME FROM EMP WORKER, EMP MANAGER WHERE WORKER.ENAME ='SMITH'; --그냥 이렇게 쓰면 에러남 

SELECT WORKER.EMPNO, WORKER.ENAME, WORKER.MGR, MANAGER.EMPNO, MANAGER.ENAME 
FROM EMP WORKER, EMP MANAGER 
WHERE WORKER.ENAME ='SMITH' AND WORKER.MGR = MANAGER.EMPNO;

    --EX. 모든 사원의 사번, 이름, 상사사번, 상사이름(13행) 
SELECT W.EMPNO 사번, W.ENAME 이름, W.MGR 상사사번, M.ENAME 상사이름
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO; -- 상사가 없는 (NULL) 값인 KING이 있기 때문에 14행이 아니라 13행이 나오는 것

    --EX. 'SMITH의 상사는 FORD다' 포맷으로 사원들을 출력 
SELECT W.ENAME || '의 상사는' || M.ENAME || '다'
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO;

-- 탄탄1. SCOTT과 동일한 부서번호에서 근무하는 사원의 이름을 출력하시오 
SELECT * FROM EMP WHERE ENAME = 'SCOTT';
SELECT ENAME FROM EMP WHERE DEPTNO = 20 AND ENAME != 'SCOTT';

---SELFJOIN 로 다시 풀어보기 -------------------------------------------------------다시 풀어보기 
SELECT WORKER.ENAME 
FROM EMP WORKER , EMP MANAGER 
WHERE WORKER.DEPTNO = MANAGER.DEPTNO AND MANAGER.ENAME = 'SCOTT' AND WORKER.ENAME != 'SCOTT';

-----------------선생님 풀이 
--1단계
SELECT E1.ENAME, E1.DEPTNO, E2.ENAME, E2.DEPTNO
FROM EMP E1, EMP E2
WHERE E1.ENAME = 'SCOTT' AND E1.DEPTNO = E2.DEPTNO AND E2.ENAME != 'SCOTT';
--2단계 정답 
SELECT E2.ENAME
FROM EMP E1, EMP E2
WHERE E1.ENAME = 'SCOTT' AND E1.DEPTNO = E2.DEPTNO AND E2.ENAME != 'SCOTT';





-- 탄탄2. SCOTT과 동일한 근무지에서 근무하는 사원의 이름을 출력하시오(2단계 최종문제) 
SELECT * FROM DEPT;
-- 인위적으로 DALLAS 근무지 부서를 하나 추가 
INSERT INTO DEPT VALUES (50, 'IT', 'DALLAS');
SELECT * FROM DEPT;
-- 인위적으로 50번 부서에 근무하는 사람도 추가 
SELECT * FROM EMP;
INSERT INTO EMP VALUES (9999,'홍길동',NULL,NULL,NULL,9000,900,50);
SELECT * FROM EMP;

SELECT * FROM DEPT;
SELECT W.ENAME 
FROM  EMP E, DEPT D, EMP W, EMP M
WHERE E.DEPTNO = D.DEPTNO  AND  AND M.ENAME = 'SCOTT';

--------------------------선생님 풀이 
----------1단계 
SELECT E1.ENAME, D1.LOC, E2.ENAME, D2.LOC
FROM EMP E1, DEPT D1, EMP E2, DEPT D2
WHERE E1.DEPTNO = D1.DEPTNO AND E2.DEPTNO = D2.DEPTNO AND D1.LOC = D2.LOC 
AND E1.ENAME = 'SCOTT';

----------2단계
SELECT E2.ENAME
FROM EMP E1, DEPT D1, EMP E2, DEPT D2
WHERE E1.DEPTNO = D1.DEPTNO AND E2.DEPTNO = D2.DEPTNO AND D1.LOC = D2.LOC 
AND E1.ENAME = 'SCOTT';

ROLLBACK;

--탄탄3. 상사의 이름이 'KING'인 사원들의 이름과 JOB을 출력 
SELECT W.ENAME, W.JOB
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO AND M.ENAME = 'KING';

-- ★ 4. OUTER JOIN : 조인시 조건에 만족하지 않은 행까지 나타나게 하고 싶을 때 // 없는 쪽에다가 (+)붙이기 
SELECT W.EMPNO, W.ENAME, W.MGR, M.ENAME
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO(+);--MGR은 있고(누군가의 번호로) , 상사사번은 없는아이

SELECT ENAME, D.DEPTNO, DNAME
FROM EMP E, DEPT D -- 40번 부서 존재 / 조인을 하면 40번 부서가 안나옴.. 
WHERE E.DEPTNO(+) = D.DEPTNO; -- E.DEPTNO에는 40번 부서 없음 
SELECT * FROM DEPT;

SELECT W.EMPNO, W.ENAME, W.MGR, M.ENAME --ㅡ상사가 아니면 MGR이 없음 (본인이 말단사원일경우) //MGR에는 없고, 사번은 있는애 
FROM EMP W, EMP M
WHERE W.MGR(+) = M.EMPNO;


-- ★ <연습문제> PART1
--SELECT * FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;
--SELECT * FROM EMP;
--1. 이름, 직속상사
SELECT W.ENAME , M.ENAME "MANAGER"
FROM EMP W, EMP M 
WHERE W.MGR = M.EMPNO;

--2. 이름, 급여, 업무, 직속상사
SELECT W.ENAME, W.SAL, W.JOB, M.ENAME"MANAGER"
FROM EMP W, EMP M 
WHERE W.MGR = M.EMPNO;

--3. 이름, 급여, 업무, 직속상사. (상사가 없는 직원까지 전체 직원 다 출력.
    --상사가 없을 시 '없음'으로 출력)
SELECT W.ENAME, W.SAL, W.JOB, NVL(M.ENAME,'없음')"MANAGER"
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO(+);

--4. 이름, 급여, 부서명, 직속상사명 
SELECT W.ENAME, W.SAL, DNAME, M.ENAME"MANAGER"
FROM EMP W, EMP M, DEPT D1
WHERE W.DEPTNO = D1.DEPTNO AND W.MGR = M.EMPNO;

--5. 이름, 급여, 부서코드, 부서명, 근무지, 직속상사명, (상사가 없는 직원까지 전체 직원 다 출력)
SELECT W.ENAME , W.SAL, W.DEPTNO, DNAME, LOC , M.ENAME"MANAGER"
FROM EMP W, DEPT D1, EMP M 
WHERE W.DEPTNO=D1.DEPTNO AND W.MGR = M.EMPNO(+);

--6. 이름, 급여, 등급, 부서명, 직속상사명. 급여가 2000이상인 사람
SELECT W.ENAME, W.SAL, GRADE ,DNAME, M.ENAME "MANAGER"
FROM EMP W, EMP M, DEPT D1, SALGRADE
WHERE W.DEPTNO = D1.DEPTNO AND W.MGR = M.EMPNO AND W.SAL BETWEEN LOSAL AND HISAL
AND W.SAL>=2000;

--7. 이름, 급여, 등급, 부서명, 직속상사명, (직속상사가 없는 직원까지 전체직원 부서명 순 정렬)
SELECT W.ENAME, W.SAL, GRADE, DNAME, M.ENAME"MANAGER"
FROM EMP W, EMP M, DEPT D1, SALGRADE
WHERE W.DEPTNO = D1.DEPTNO AND W.MGR = M.EMPNO(+) AND W.SAL BETWEEN LOSAL AND HISAL
ORDER BY DNAME;

--8. 이름, 급여, 등급, 부서명, 연봉, 직속상사명. 연봉=(급여+comm)*12 단 comm이 null이면 0
SELECT W.ENAME, W.SAL, GRADE, DNAME , (W.SAL+NVL(W.COMM,0))*12 "연봉", M.ENAME"MANAGER"
FROM EMP W, EMP M, DEPT D, SALGRADE
WHERE W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO AND W.SAL BETWEEN LOSAL AND HISAL;

--9. 8번을 부서명 순 부서가 같으면 급여가 큰 순 정렬
SELECT W.ENAME, W.SAL, GRADE, DNAME , (W.SAL+NVL(W.COMM,0))*12 "연봉", M.ENAME"MANAGER"
FROM EMP W, EMP M, DEPT D, SALGRADE
WHERE W.DEPTNO=D.DEPTNO AND W.MGR=M.EMPNO AND W.SAL BETWEEN LOSAL AND HISAL 
ORDER BY DNAME, W.SAL DESC;

--  PART2
--1.EMP 테이블에서 모든 사원에 대한 이름,부서번호,부서명을 출력하는 SELECT 문장을 작성하여라.
SELECT ENAME, E.DEPTNO, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;

--2. EMP 테이블에서 NEW YORK에서 근무하고 있는 사원에 대하여 이름,업무,급여,부서명을 출력
SELECT ENAME, JOB, SAL, DNAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND LOC='NEW YORK';

--3. EMP 테이블에서 보너스를 받는 사원에 대하여 이름,부서명,위치를 출력 
SELECT ENAME, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND NOT COMM IS NULL AND COMM !=0  ;
SELECT ENAME, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND COMM>=1  ;

--4. EMP 테이블에서 이름 중 L자가 있는 사원에 대하여 이름,업무,부서명,위치를 출력
SELECT ENAME, JOB, DNAME, LOC FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO AND ENAME LIKE '%L%';

--5. 사번, 사원명, 부서코드, 부서명을 검색하라. 사원명기준으로 오름차순정열
SELECT EMPNO, ENAME, E.DEPTNO, DNAME 
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO ORDER BY ENAME;

--6. 사번, 사원명, 급여, 부서명을 검색하라. 
    --단 급여가 2000이상인 사원에 대하여 급여를 기준으로 내림차순으로 정열하시오
SELECT EMPNO, ENAME, SAL, DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO AND SAL>=2000 ORDER BY SAL DESC;

--7. 사번, 사원명, 업무, 급여, 부서명을 검색하시오. 단 업무가 MANAGER이며 급여가 2500이상인
-- 사원에 대하여 사번을 기준으로 오름차순으로 정열하시오.
SELECT EMPNO, ENAME, JOB, SAL, DNAME 
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO AND JOB = 'MANAGER' AND SAL>=2500 ORDER BY EMPNO;

--8. 사번, 사원명, 업무, 급여, 등급을 검색하시오. 단, 급여기준 내림차순으로 정렬하시오
SELECT EMPNO, ENAME, JOB, SAL, GRADE 
FROM EMP E, DEPT D, SALGRADE
WHERE E.DEPTNO = D.DEPTNO AND SAL BETWEEN LOSAL AND HISAL ORDER BY SAL DESC;

--9. 사원테이블에서 사원명, 사원의 상사를 검색하시오(상사가 없는 직원까지 전체)
SELECT W.ENAME , M.ENAME "MANAGER"
FROM EMP W, EMP M
WHERE W.MGR = M.EMPNO(+);

--10. 사원명, 상사명, 상사의 상사명을 검색하시오
SELECT W.ENAME , M.ENAME"MANAGER", S.ENAME"MANAGER의 상사"
FROM EMP W, EMP M, EMP S
WHERE W.MGR = M.EMPNO AND M.MGR = S.EMPNO;

--11. 위의 결과에서 상위 상사가 없는 모든 직원의 이름도 출력되도록 수정하시오
SELECT W.ENAME , M.ENAME"MANAGER", S.ENAME"MANAGER의 상사"
FROM EMP W, EMP M, EMP S
WHERE W.MGR = M.EMPNO(+) AND M.MGR = S.EMPNO(+);






